version: "2"

services:
  zk:
    image: rdelvalle/zookeeper
    restart: on-failure
    ports:
    - "2181:2181"
    environment:
      ZK_CONFIG: tickTime=2000,initLimit=10,syncLimit=5,maxClientCnxns=128,forceSync=no,clientPort=2181
      ZK_ID: 1
    networks:
      aurora_cluster:
        ipv4_address: 192.168.33.2
    logging:
      driver: none
    # optional setup to run the test
    volumes: 
    - [path_having_australis_binary]:/australis 
    - [path_having_test_scripts]:/test

  master:
    image: rdelvalle/mesos-master:1.5.1
    restart: on-failure
    ports:
    - "5050:5050"
    environment:
      MESOS_ZK: zk://192.168.33.2:2181/mesos
      MESOS_QUORUM: 1
      MESOS_HOSTNAME: localhost
      MESOS_CLUSTER: test-cluster
      MESOS_REGISTRY: replicated_log
      MESOS_WORK_DIR: /tmp/mesos
    networks:
      aurora_cluster:
        ipv4_address: 192.168.33.3
    depends_on:
    - zk
    logging:
      driver: none 

  agent-one:
    image: lenhattan86/mesos-agent:1.5.1
    pid: host
    restart: on-failure
    ports:
    - "5051:5051"
    environment:
      MESOS_MASTER: zk://192.168.33.2:2181/mesos
      MESOS_CONTAINERIZERS: docker,mesos
      MESOS_HOSTNAME: 192.168.33.4
      MESOS_PORT: 5051
      MESOS_RESOURCES: ports(*):[11000-11999]
      MESOS_SYSTEMD_ENABLE_SUPPORT: 'false'
      MESOS_WORK_DIR: /tmp/mesos
    networks:
      aurora_cluster:
        ipv4_address: 192.168.33.4

    volumes:
    - /sys/fs/cgroup:/sys/fs/cgroup
    - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
    - zk
    logging:
      driver: none 

  agent-two:
    image: lenhattan86/mesos-agent:1.5.1
    pid: host
    restart: on-failure
    ports:
    - "5061:5051"
    environment:
      MESOS_MASTER: zk://192.168.33.2:2181/mesos
      MESOS_CONTAINERIZERS: docker,mesos
      MESOS_HOSTNAME: 192.168.33.5
      MESOS_PORT: 5051
      MESOS_RESOURCES: ports(*):[11000-11999]
      MESOS_SYSTEMD_ENABLE_SUPPORT: 'false'
      MESOS_WORK_DIR: /tmp/mesos
    networks:
      aurora_cluster:
        ipv4_address: 192.168.33.5
    logging:
      driver: none 

    volumes:
    - /sys/fs/cgroup:/sys/fs/cgroup
    - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
    - zk

  aurora-one:
    image: lenhattan86/aurora:1.3
    pid: host
    ports:
    - "8081:8081"
    - "9090:9090"
    restart: on-failure
    environment:
      CLUSTER_NAME: test-cluster
      ZK_ENDPOINTS: "192.168.33.2:2181"
      MESOS_MASTER: "zk://192.168.33.2:2181/mesos"
      AURORA_HOME: /usr/share/aurora
      LOGDB_FILE_PATH: /var/db/aurorax
      MESOS_NATIVE_JAVA_LIBRARY: /usr/local/lib/libmesos.so
      EXTRA_SCHEDULER_ARGS: >
        -http_authentication_mechanism=NONE
        -min_required_instances_for_sla_check=1
        -sla_aware_kill_non_prod=true
        -sla_non_prod_metrics=MEDIANS
        -offer_set_module=io.github.aurora.scheduler.offers.HttpOfferSetModule
        -http_offer_set_timeout=150ms
        -http_offer_set_max_retries=3
        -http_offer_set_endpoint=http://localhost:9090/v1/offerset
        -http_offer_set_task_fetch_interval=2secs
        -http_offer_set_filter_enabled=false
        -http_offer_set_max_starting_tasks_per_slave=100
        -task_assigner_modules=io.github.aurora.scheduler.scheduling.ProbabilisticPriorityAssignerModule
        -probabilistic_priority_assigner_exponent=1.0
        -probabilistic_priority_assigner_task_fetch_interval=2secs
    networks:
      aurora_cluster:
        ipv4_address: 192.168.33.7
    volumes:
      - /Users/nhatle/projects/aurora-scheduler/scheduler/dist/install/aurora-scheduler:/usr/share/aurora
      - [path_having_magicmatch_binary]:/usr/share/magicmatch
      - [path_having_magicmatch.yaml]:/etc/magicmatch 

    depends_on:
    - zk
    - master
    - agent-one
    - agent-two

networks:
  aurora_cluster:
    driver: bridge
    ipam:
      config:
      - subnet: 192.168.33.0/16
        gateway: 192.168.33.1
